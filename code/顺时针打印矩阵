/*
*
输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
例如，如果输入如下矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
*
*/
/*
打印方式为先按行从左到右打印，再行的最后一个按列从小到大打印，
其次按照行从右到左打印，最后再从行的未打印的第一列从大到小打印。
因此需要先确定打印矩阵需要转的圈数，然后确定圈数与各行各列的约束关系。  
*/

vector<int> printMatrix(vector<vector<int> > matrix) {
        vector<int> res;
        int row = matrix.size();                          /*行数*/
        int column = matrix[0].size();                    /*列数*/
        int circle = ((row<column?row:column)-1)/2+1;     /*圈数*/
        for(int i=0; i<circle; i++){
            for(int j=i; j<column-i; j++){
                res.push_back(matrix[i][j]);
            }
            for(int k=i+1; k<row-i; k++){
                res.push_back(matrix[k][column-i-1]);
            }
            for(int m=column-i-2; (m>i-1)&&(row-i-1!=i);m--){
                res.push_back(matrix[row-i-1][m]);
            }
            for(int n=row-i-2; (n>i)&&(column-i-1!=i); n--){
                res.push_back(matrix[n][i]);
            }
        }
        return res;
    }
