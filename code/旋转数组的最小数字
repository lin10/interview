/*
*
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
*
*/

/****时间复杂度为O(N)的算法*****/
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
        if(rotateArray.size() == 0)
            return 0;
        int len = rotateArray.size();
        for(int i=0; i<=len-1; i++){
            if(rotateArray[i] < rotateArray[i-1])
               return rotateArray[i];
        }
       return rotateArray[0];
    }
};


/****时间复杂度为O(log(N))的算法,利用二分查找*****/
int minNumberInRotateArray(vector<int> rotateArray) {
        if(rotateArray.size() == 0)
            return 0;
        int high = rotateArray.size()-1;
        int low = 0;
        int mid;
        while(rotateArray[low]>=rotateArray[high]){
            if(high-low == 1){
                mid = high;
                break;
            }
            mid = (low+high)/2;
            if(rotateArray[mid]>=rotateArray[low]){
                low = mid;
            }else if(rotateArray[mid]<=rotateArray[high]){
                high = mid;
            }
        }
        return rotateArray[mid];
    }
