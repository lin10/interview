/*
*
在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。
例如，链表1->2->3->3->4->4->5 处理后为 1->2->5
*
*/
/**idea**/
注意本题是有序链表，利用递归实现，利用一个辅助指针。
/**code**/
/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) :
        val(x), next(NULL) {
    }
};
*/
class Solution {
public:
    ListNode* deleteDuplication(ListNode* pHead)
    {
         if(pHead == NULL || pHead->next == NULL)
         {
             return pHead;
         }else{
             ListNode* resHead = new ListNode(-1);
             resHead->next = pHead;
             ListNode* pre = resHead;
             ListNode* p = pHead;
             ListNode* next = NULL;
             while(p!=NULL && p->next!=NULL){
                 next = p->next;
                 if(p->val == next->val){
                     while(next!=NULL && p->val==next->val)
                         next = next->next;
                     pre->next = next;
                     p = next;
                 }else{
                     pre = p;
                     p = p->next;
                 }
             }
             return resHead->next;
         }
    }
};
