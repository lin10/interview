/**
请实现一个函数，用来判断一颗二叉树是不是对称的。
注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。
**/
/**idea**/
利用递归对二叉树进行两次先左后右与先右后左的遍历如果相同则证明是对称的二叉树
/**code**/
/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    bool isSymmetrical(TreeNode* pRoot)
    {
       return check(pRoot, pRoot);
    }
    bool check(TreeNode* pRoot1, TreeNode* pRoot2)
    {
        if(pRoot1 == NULL && pRoot2 == NULL) return true;
            else if(pRoot1 == NULL || pRoot2 == NULL)
                return false;
        if(pRoot1->val != pRoot2->val)
            return false;
         return check(pRoot1->left, pRoot2->right) && check(pRoot1->right, pRoot2->left);
    }

};
