/*
*
输入一个递增排序的数组和一个数字S，在数组中查找两个数，
是的他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。
输出描述:
对应每个测试案例，输出两个数，小的先输出。
*
*/
/**idea**/
当数组中的两个数字距离越远，乘积越小。
设置两个指针i,j分别从头尾向中间遍历。
如果arr[i] + arr[j] > sum时，需要减一个数，--j(因为i从前往后遍历，前面的已经不符合条件，所以不能--i)
如果arr[i] + arr[j] < sum时，需要加一个数，++i(因为j从后往前遍历，后面的已经不符合条件，所以不能++j)
当arr[i] + arr[j] = sum时，则为所需要的数值
/**code**/
 vector<int> FindNumbersWithSum(vector<int> array,int sum) {
        vector<int> res;
        int i=0,j=array.size()-1;
        while(i<j){
            if(array[i]+array[j] == sum){
                res.push_back(array[i]);
                res.push_back(array[j]);
                break;
            }
            while(array[i] + array[j] > sum) --j;
            while(array[i] + array[j] < sum) ++i;
        }
        return res;
    }
